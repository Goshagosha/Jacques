2022-11-19 17:17:28.298 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	load from <ARG0> as csv_with_header
	spark.read.format('csv').option('header', True).load(<ARG0>)
2022-11-19 17:17:28.317 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	create dataframe from <ARG0> with header <LST0>
	spark.createDataFrame(<ARG0>, schema=<LST0>)
2022-11-19 17:17:28.373 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	difference <ARG0>
	<PIPE>.subtract(<ARG0>)
2022-11-19 17:17:28.374 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	show
	<PIPE>.show()
2022-11-19 17:17:28.405 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	select columns <LST0>
	<PIPE>.select(<LST0>)
2022-11-19 17:17:28.408 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	group by <LST0>
	<PIPE>.groupBy(<LST0>)
2022-11-19 17:17:28.480 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	on <ARG0>
	<ARG0>
2022-11-19 17:17:28.483 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	head <ARG0>
	<PIPE>.head(<ARG0>)
2022-11-19 17:17:28.486 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	replace <ARG0> with <ARG1>
	<PIPE>.replace(<ARG0>, <ARG1>)
2022-11-19 17:17:28.490 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	append column <OPR0> as <ARG0>
	<PIPE>.withColumn(<ARG0>, <OPR0>)
2022-11-19 17:17:28.492 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	show schema
	<PIPE>.printSchema()
2022-11-19 17:17:28.559 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	rename columns <ARG0> to <ARG1>
	<PIPE>.withColumnRenamed(<ARG0>, <ARG1>)
2022-11-19 17:17:28.562 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	intersection <ARG0>
	<PIPE>.intersect(<ARG0>)
2022-11-19 17:17:28.566 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	apply <ARG0> on <ARG1> as <ARG2>
	<PIPE>.agg(<ARG0>(<ARG1>).alias(<ARG2>))
2022-11-19 17:17:28.599 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	drop columns <LST0>
	<PIPE>.drop(<LST0>)
2022-11-19 17:17:28.603 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	join <ARG0> <ARG1> on <LST0>
	<PIPE>.join(<ARG1>, on=<LST0>, how=<ARG0>)
2022-11-19 17:17:28.605 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	count
	<PIPE>.count()
2022-11-19 17:17:28.723 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	sort by <LST0> descending
	<PIPE>.sort(<LST0>, ascending=[False])
2022-11-19 17:17:28.762 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	on data
	max('Confirmed')
2022-11-19 17:17:28.820 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	select rows <OPR0>
	<PIPE>.filter(<OPR0>)
2022-11-19 17:17:28.890 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	union <ARG0>
	<PIPE>.unionByName(<ARG0>)
2022-11-19 17:17:28.896 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	save to <ARG0> as <ARG1>
	<PIPE>.write.format(<ARG1>).save(<ARG0>)
2022-11-19 17:17:29.011 | INFO     | src.jacques.core.rule_synthesizer:from_example:34 - Generated rule: <class 'src.jacques.core.rule.Rule'>
	describe
	<PIPE>.describe()
2022-11-19 17:17:29.261 | INFO     | src.jacques.core.jacques:process_all_examples:170 - 23 rules generated.
2022-11-19 17:17:29.261 | INFO     | src.jacques.core.jacques:process_all_examples:171 - Examples not exhausted: 1
2022-11-19 17:17:29.262 | INFO     | src.jacques.core.jacques:process_all_examples:173 - <class 'src.jacques.core.example.Example'>
	load from 'covid_19_data.csv' as csv_with_header | drop duplicates | sort by 'Confirmed' ascending | save to 'output.csv' as csv
	spark.read.format('csv').option("header", True).load('covid_19_data.csv').dropDuplicates().sort(['Confirmed'], ascending=[True]).write.format('csv').save('output.csv')
2022-11-19 17:17:29.263 | INFO     | src.jacques.core.jacques:process_all_examples:174 - Excepted due to parsing errors: 0
2022-11-19 17:17:29.264 | INFO     | src.jacques.core.jacques:process_all_examples:177 - Rules:
2022-11-19 17:17:29.264 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	load from <ARG0> as csv_with_header
	spark.read.format('csv').option('header', True).load(<ARG0>)
2022-11-19 17:17:29.265 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	create dataframe from <ARG0> with header <LST0>
	spark.createDataFrame(<ARG0>, schema=<LST0>)
2022-11-19 17:17:29.267 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	difference <ARG0>
	<PIPE>.subtract(<ARG0>)
2022-11-19 17:17:29.268 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	show
	<PIPE>.show()
2022-11-19 17:17:29.269 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	select columns <LST0>
	<PIPE>.select(<LST0>)
2022-11-19 17:17:29.269 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	group by <LST0>
	<PIPE>.groupBy(<LST0>)
2022-11-19 17:17:29.270 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	on <ARG0>
	<ARG0>
2022-11-19 17:17:29.271 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	head <ARG0>
	<PIPE>.head(<ARG0>)
2022-11-19 17:17:29.272 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	replace <ARG0> with <ARG1>
	<PIPE>.replace(<ARG0>, <ARG1>)
2022-11-19 17:17:29.272 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	append column <OPR0> as <ARG0>
	<PIPE>.withColumn(<ARG0>, <OPR0>)
2022-11-19 17:17:29.273 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	show schema
	<PIPE>.printSchema()
2022-11-19 17:17:29.273 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	rename columns <ARG0> to <ARG1>
	<PIPE>.withColumnRenamed(<ARG0>, <ARG1>)
2022-11-19 17:17:29.274 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	intersection <ARG0>
	<PIPE>.intersect(<ARG0>)
2022-11-19 17:17:29.274 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	apply <ARG0> on <ARG1> as <ARG2>
	<PIPE>.agg(<ARG0>(<ARG1>).alias(<ARG2>))
2022-11-19 17:17:29.275 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	drop columns <LST0>
	<PIPE>.drop(<LST0>)
2022-11-19 17:17:29.276 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	join <ARG0> <ARG1> on <LST0>
	<PIPE>.join(<ARG1>, on=<LST0>, how=<ARG0>)
2022-11-19 17:17:29.282 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	count
	<PIPE>.count()
2022-11-19 17:17:29.283 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	sort by <LST0> descending
	<PIPE>.sort(<LST0>, ascending=[False])
2022-11-19 17:17:29.284 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	on data
	max('Confirmed')
2022-11-19 17:17:29.285 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	select rows <OPR0>
	<PIPE>.filter(<OPR0>)
2022-11-19 17:17:29.286 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	union <ARG0>
	<PIPE>.unionByName(<ARG0>)
2022-11-19 17:17:29.287 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	save to <ARG0> as <ARG1>
	<PIPE>.write.format(<ARG1>).save(<ARG0>)
2022-11-19 17:17:29.289 | INFO     | src.jacques.core.jacques:process_all_examples:179 - <class 'src.jacques.core.rule.Rule'>
	describe
	<PIPE>.describe()
2022-11-19 17:17:29.291 | INFO     | __main__:<module>:57 - Expected 2 options for rule 'save to', but it is not ConditionalRule
2022-11-19 17:17:29.295 | INFO     | __main__:<module>:57 - Expected 2 options for rule 'join', but it is not ConditionalRule
2022-11-19 17:17:29.298 | INFO     | __main__:<module>:57 - Expected 4 options for rule 'apply', but it is not ConditionalRule
2022-11-19 17:17:29.300 | INFO     | __main__:<module>:57 - Expected 2 options for rule 'sort by', but it is not ConditionalRule
2022-11-19 17:17:29.301 | INFO     | __main__:<module>:49 - Expected rule 'drop duplicates' not learned
